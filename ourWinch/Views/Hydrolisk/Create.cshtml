@* // C# MVC View Model declaration *@

@model HydroliskListViewModel
@* 
// Check for errors and display an alert if there are any *@
@if (ViewBag.Errors != null && ViewBag.Errors.Count > 0)
{
<div class="alert alert-danger">
    <ul>
        @foreach (var error in ViewBag.Errors)
            {
        <li>@error</li>
            }
    </ul>
</div>
}

@* // Check for success message and display a success alert *@
@if (ViewBag.SuccessMessage != null)
{
<script>
        @* // Use SweetAlert to display a success message *@
        Swal.fire({
            title: 'Vellykket',
            text: '@ViewBag.SuccessMessage',
            icon: 'success',
            confirmButtonText: 'OK'
        });
</script>
}


<style>
    .form-button {
        background-color: #d17242;
        border-color: #d17242;
        color: white;
    }

        .form-button:hover,
        .form-button:focus,
        .form-button:active {
            background-color: #217520;
            border-color: #217520;
        }

    .active-button {
        background-color: #217520 !important;
        color: #FFFFFF !important;
    }

    .form {
        background-color: #bfd0d7;
        border-radius: 20px;
        padding: 10px;
    }

    i {
        border-radius: 50%;
    }

    .button-add-item:hover,
    .button-add-item:focus,
    .button-add-item:active {
        background-color: #217520;
        border-color: #217520;
    }

    .submit-button:hover,
    .submit-button:focus,
    .submit-button:active {
        background-color: #217520;
        border-color: #217520;
    }


    .button-add-item {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #d17242;
        border-color: #d17242;
    }

    .submit-button {
        background-color: #d17242;
        border-color: #d17242;
    }
</style>

<script>
  
    var someServiceOrderId = @Model.ServiceOrderId;   // Set someServiceOrderId from the model
    var someCategory = "@ViewBag.ActiveButton";  // Set someCategory from the ViewBag
</script>
<main class="dflex mx-auto mt-3">

    <!--************************* TABLE *****************************-->
    <div>
        <div class="container mt-2">

            <div class="row">
                <div class="col-md-4 border border-black p-1">
                    <strong>OrderID:</strong> @Model.Ordrenummer
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>ProduktType:</strong> @Model.Produkttype
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>Arsmodell:</strong> @Model.Årsmodell
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 border border-black p-1">
                    <strong>Kunde Navn:</strong> @Model.Fornavn @Model.Etternavn
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>Serie No:</strong> @Model.Serienummer
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>Status: Prosess</strong>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 border border-black p-1">
                    <strong>Mobil No:</strong> @Model.MobilNo
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>Feilbeskrivelse:</strong> @Model.Feilbeskrivelse
                </div>
                <div class="col-md-4 border border-black p-1">
                    <strong>Kommentar fra kunde:</strong> @Model.KommentarFraKunde
                </div>
            </div>
        </div>

    </div>
    <section class="mt-3">
        <!--************************* BUTONS ******************************** -->
        <div class="container text-light">
            <div class="row">
                <div class="col-2 col-md-2 col-lg-2.4">
                    <a asp-controller="Mechanical" asp-action="Create" asp-route-serviceOrderId="@Model.ServiceOrderId" asp-route-category="Mechanical">
                        <button class="btn form-button @(ViewBag.ActiveButton == "Mechanical" ? "active-button" : "") w-100 p-3">Mekanisk</button>
                    </a>
                </div>
                <div class="col-2 col-md-2 col-lg-2.4">
                    <a asp-controller="Hydrolisk" asp-action="Create" asp-route-serviceOrderId="@Model.ServiceOrderId" asp-route-category="Hydrolisk">
                        <button class="btn form-button @(ViewBag.ActiveButton == "Hydrolisk" ? "active-button" : "") w-100 p-3">Hydrolisk</button>
                    </a>
                </div>
                <div class="col-2 col-md-2 col-lg-2.4">
                    <a asp-controller="Electro" asp-action="Create" asp-route-serviceOrderId="@Model.ServiceOrderId" asp-route-category="Electro">
                        <button class="btn form-button @(ViewBag.ActiveButton == "Electro" ? "active-button" : "") w-100 p-3">Elektro</button>
                    </a>
                </div>
                <div class="col-2 col-md-2 col-lg-2.4">
                    <a asp-controller="FunksjonsTest" asp-action="Create" asp-route-serviceOrderId="@Model.ServiceOrderId" asp-route-category="FunksjonsTest">
                        <button class="btn form-button @(ViewBag.ActiveButton == "FunksjonsTest" ? "active-button" : "") w-100 p-3">FunksjonsTest</button>
                    </a>
                </div>
                <div class="col-2 col-md-2 col-lg-2.4">
                    <a asp-controller="Trykk" asp-action="Create" asp-route-serviceOrderId="@Model.ServiceOrderId" asp-route-category="Trykk">
                        <button class="btn form-button @(ViewBag.ActiveButton == "Trykk" ? "active-button" : "") w-100 p-3">TrykkSettinger</button>
                    </a>
                </div>
            </div>
        </div>

    </section>
    <!-- ************************** Form for Hydrolisk ******************************* -->

    <div class="container mt-3" onclick="eventHandler(event)">

        <!-- Form 1 -->
        <form class="row form" id="formHydrolisk" asp-controller="Hydrolisk" asp-action="Create" method="post">

            @Html.AntiForgeryToken()

            <h3 class="mx-auto">Hydrolisk Sjekkliste</h3>
            <!-- Option 1 -->
            <div class="col-md-12 d-flex align-items-center">
                <div class="col-md-6">
                    <input type="hidden" name="Hydrolisks[0].ChecklistItem" value="Sjekk hydraulikk sylinder for lekkasje">
                    <label for="option0">Sjekk hydraulikk sylinder for lekkasje</label>
                </div>

                <!-- Radio Buttons -->
                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[0].OK" id="option0OK" value="true">
                        <label class="form-check-label" for="option0OK">OK</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[0].BorSkiftes" id="option01BorSkiftes" value="true">
                        <label class="form-check-label" for="option01BorSkiftes">BorSkiftes</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[0].Defekt" id="option02Defekt" value="true">
                        <label class="form-check-label" for="option02Defekt">Defekt</label>

                    </div>
                </div>

            </div>

            <!-- Option 2 -->
            <div class="col-md-12 d-flex align-items-center">
                <input type="hidden" name="Hydrolisks[1].ChecklistItem" value="Sjekk slanger for skader og lekkasje">
                <div class="col-md-6">
                    <label for="option1">Sjekk slanger for skader og lekkasje</label>
                </div>

                <!-- Radio Buttons -->
                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[1].OK" id="option1OK" value="true">
                        <label class="form-check-label" for="option1OK">OK</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[1].BorSkiftes" id="option11BorSkiftes" value="true">
                        <label class="form-check-label" for="option11BorSkiftes">BorSkiftes</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[1].Defekt" id="option12Defekt" value="true">
                        <label class="form-check-label" for="option12Defekt">Defekt</label>
                    </div>
                </div>
            </div>

            <!-- Option 3 -->
            <div class="col-md-12 d-flex align-items-center">
                <input type="hidden" name="Hydrolisks[2].ChecklistItem" value="Test hyraulikkblokk i testbenk">
                <div class="col-md-6">
                    <label for="option2">Test hyraulikkblokk i testbenk</label>
                </div>

                <!-- Radio Buttons -->
                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[2].OK" id="option2OK" value="true">
                        <label class="form-check-label" for="option2OK">OK</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[2].BorSkiftes" id="option21BorSkiftes" value="true">
                        <label class="form-check-label" for="option21BorSkiftes">BorSkiftes</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Hydrolisks[2].Defekt" id="option22Defekt" value="true">
                        <label class="form-check-label" for="option22Defekt">Defekt</label>

                    </div>
                </div>

            </div>
            <div class="col-md-12 d-flex align-items-center" id="inputRow1">
                <div class="col-md-6" id="inputDiv1" style="display:none;">
                    <input type="text" id="userInput1" placeholder="legge til ny sjekkpunkt" class="form-control">
                </div>
                <button type="button" onclick="addItem('Hydrolisks')" class="button-add-item">
                    <i class="fa-solid fa-plus text-white"></i>
                </button>
            </div>
            <!--***************************Comment****************************-->
            <div class="form-floating col-12 mt-3">
                <textarea class="form-control w-100" placeholder="Skriv en kommentar" id="MechanicTextArea" name="Kommentar" style="height: 100px"></textarea>
                <label for="MechanicTextArea"></label>
            </div>
            <div class="col-12 text-center mt-3">
                <!-- Added text-center and mt-3 for spacing -->
                <button class="btn submit-button" type="submit">Lagre</button>
            </div>



        </form>
    </div>
    <!-- JavaScript -->

    <script>
        // Counter for dynamically adding form items
         
        let counter = 3;
                 // Function to add form items dynamically based on user input
                // param { string } formId - The ID of the form to which items will be added

        function addItem(formId) {
            let inputDiv;
            let userInputField;
            let inputRow;
            // Switch based on the form ID to get corresponding elements
            switch (formId) {
                case 'Hydrolisks':
                    inputDiv = document.getElementById("inputDiv1");
                    userInputField = document.getElementById('userInput1');
                    inputRow = document.getElementById("inputRow1");
                    break;
                case 'form2':
                    inputDiv = document.getElementById("inputDiv2");
                    userInputField = document.getElementById('userInput2');
                    inputRow = document.getElementById("inputRow2");
                    break;
                case 'form3':
                    inputDiv = document.getElementById("inputDiv3");
                    userInputField = document.getElementById('userInput3');
                    inputRow = document.getElementById("inputRow3");
                    break;
                case 'form4':
                    inputDiv = document.getElementById("inputDiv4");
                    userInputField = document.getElementById('userInput4');
                    inputRow = document.getElementById("inputRow4");
                    break;
                case 'form5':
                    inputDiv = document.getElementById("inputDiv5");
                    userInputField = document.getElementById('userInput5');
                    inputRow = document.getElementById("inputRow5");
                    break;
            }
            
            inputDiv.style.display = "flex";
            let labelText = userInputField.value;
            if (labelText === '') return;

            let newItem = document.createElement('div');
            newItem.classList.add('col-md-12', 'd-flex', 'align-items-center');

            newItem.innerHTML = `
                                <div class="col-md-6">
                                    <input type="hidden" name="Hydrolisks[${counter}].ChecklistItem" value="${labelText}">
                                    <label style="word-wrap: break-word;max-width: 100%;" for=${labelText}>${labelText}</label>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="Hydrolisks[${counter}].OK" value="true">
                                        <label class="form-check-label">OK</label>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="Hydrolisks[${counter}].BorSkiftes" value="true">
                                        <label class="form-check-label">BorSkiftes</label>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="Hydrolisks[${counter}].Defekt" value="true">
                                        <label class="form-check-label">Defekt</label>
                                    </div>
                                </div>
                            `;
            // Insert the new item before the input row
            inputRow.parentNode.insertBefore(newItem, inputRow);
            userInputField.value = '';
            counter++;
        }
        // Event handler for radio button selections
        // param{ Event } event - The event object

        const eventHandler = (event) => {
            if (event.target.type === 'radio') {
                console.log(event.target.value);
            }
        }

        /**
         * Function to set an active class for buttons
         * param {HTMLElement} button - The button element to set as active
         */
        function setActive(button) {
            var buttons = document.querySelectorAll('.form-button');
            buttons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
        }
        // Event listener for form submission
        document.getElementById('hydrolisks').addEventListener('submit', function (event) {
            if (!isFormSubmitted) {
                event.preventDefault();
                var inputs = this.querySelectorAll('input[type="text"], input[type="radio"]:checked, textarea');
                inputs.forEach(function (input) {
                    console.log(input.name + ": " + input.value);
                });
                // Set the action URL based on someServiceOrderId and someCategory
                const actionUrl = `/Hydrolisks/Create/${someServiceOrderId}/${someCategory}`;

                // Set the form action attribute and submit the form
                this.setAttribute('action', actionUrl);
                isFormSubmitted = true;
                this.submit();
            }
        });
    </script>
</main>
